\documentclass[12pt, a4paper]{article}
\usepackage[utf8]{inputenc}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{amsfonts}
\usepackage{graphicx}
\usepackage{geometry}
\usepackage{booktabs}
\usepackage{longtable}
\usepackage{caption}
\usepackage{hyperref}

\geometry{a4paper, margin=1in}
\hypersetup{
    colorlinks=true,
    linkcolor=blue,
    filecolor=magenta,      
    urlcolor=cyan,
}

\title{A Theoretical and Practical Framework for a Secure Algorithmic Execution Engine}
\author{Quantitative Research and Development Division}
\date{\today}

\begin{document}
\maketitle
\tableofcontents
\newpage

\section{Formal Model of Order Types and Execution Semantics}

We define the following order types and their execution semantics, incorporating queue position effects:

\subsection{Order Types}
\begin{itemize}
    \item \textbf{Limit Order $(p, q)$:}  An order to buy or sell $q$ units at a specified price $p$.  Enters the limit order book (LOB) at price level $p$ and waits to be filled.  The queue position $pos$ is determined by the order's submission time.
    \item \textbf{Market Order $(q)$:} An order to buy or sell $q$ units at the best available price. Immediately executes against the opposite side of the LOB.
    \item \textbf{Immediate-or-Cancel (IOC) Order $(p, q)$:} A limit order that must be executed immediately or partially.  Any unfilled portion is cancelled.
    \item \textbf{Fill-or-Kill (FOK) Order $(p, q)$:} A limit order that must be executed entirely immediately or cancelled.
    \item \textbf{Post-Only Order $(p, q)$:} A limit order that is only placed if it does not immediately execute.  This prevents taking liquidity and ensures the order enters the LOB.
\end{itemize}

\subsection{LOB and Queue Position}
The LOB at time $t$ is represented as two ordered lists:
\[
\mathcal{B}_t = \{(p_i^b, Q_i^b)\}_{i=1}^{N_b} \quad \text{(Bids)}
\]
\[
\mathcal{A}_t = \{(p_i^a, Q_i^a)\}_{i=1}^{N_a} \quad \text{(Asks)}
\]
where $Q_i^b$ and $Q_i^a$ are queues of $(quantity, submission\_time)$ tuples at each price level, ordered by submission time.

\section{Execution Decision Problem}

The execution decision problem is to choose the optimal order type and size to minimize expected cost and penalty, subject to fill probability constraints.

\subsection{Objective Function}
\[
\min_{type, q} E[Cost(type, q) + Penalty(type, q)]
\]
where $Cost(type, q)$ is the execution cost and $Penalty(type, q)$ is a penalty for not filling the order within a certain time.

\subsection{Fill Probability Constraint}
\[
P(\text{Fill}(type, q)) \ge 1 - \epsilon
\]
where $\epsilon$ is the maximum acceptable probability of not filling the order.

\section{Post-Trade Checks}

\begin{itemize}
    \item \textbf{Fill Validation:} Verify that the filled quantity and price are consistent with the order details and market conditions.
    \item \textbf{Idempotency:} Ensure that replaying the same order (e.g., due to network issues) does not result in duplicate fills.
    \item \textbf{Reconciliation:} Regularly poll the exchange to synchronize the internal order status with the exchange's record.
    \item \textbf{Risk Limits:} Implement risk limits for leveraged positions, such as maximum position size and margin requirements.
\end{itemize}

\section{Integration Tests}

\begin{itemize}
    \item \textbf{Order Lifecycle:} Test the full order lifecycle (place, cancel, fill, partial fill) for all order types.
    \item \textbf{Idempotency Test:} Replay the same order multiple times and verify that only one fill occurs.
    \item \textbf{Reconciliation Test:} Verify that the reconciliation routine correctly synchronizes order status.
    \item \textbf{Risk Limit Test:} Test that risk limits are enforced and prevent exceeding position or margin limits.
    \item \textbf{Queue Position Test:} Verify that queue position is correctly simulated and affects order execution.
\end{itemize}

\end{document}
